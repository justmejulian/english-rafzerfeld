---
import { z } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import Title from '@components/typography/Title.astro';

import { multiLingualSchema } from '@utils/zod.ts';

import data from '@content/team.json';

interface Props {
  locale: 'en' | 'de';
}

const { locale } = Astro.props as Props;

const contentSchema = multiLingualSchema(
  z.object({
    title: z.string(),
    teachers: z.array(
      z.object({
        name: z.string(),
        description: z.string(),
        image: z.string(),
        certificates: z.array(
          z.object({
            name: z.string(),
          }),
        ),
      }),
    ),
  }),
);

console.log(data);

const parsedData = contentSchema.parse(data);

const { en, de } = parsedData;

const content = locale === 'en' ? en : de;
---

<Layout locale={locale}>
  <Title>{content.title}</Title>
  <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
    {content.teachers.map((teacher) => (
      <div class="bg-white p-4 rounded-lg shadow-md">
      {console.log(teacher.image)}
      <img src={teacher.image} alt={teacher.name} class="w-full h-48 object-cover rounded-t-lg" />
        <h3 class="text-xl font-bold mt-2">{teacher.name}</h3>
        <p class="text-gray-700">{teacher.description}</p>
        <h4 class="mt-2 font-semibold">Certificates:</h4>
        <ul class="list-disc pl-5">
          {teacher.certificates.map((cert) => (
            <li>{cert.name}</li>
          ))}
        </ul>
      </div>
    ))}
</Layout>
