---
interface Level {
  name: string;
  description: string;
  subLevels: Array<{
    name: string;
    description: string;
  }>;
}

interface Props {
  title: string;
  description: string;
  levels: Level[];
}

const { title, description, levels } = Astro.props;

const colors = [
  { border: 'border-blue-500', bg: 'bg-blue-50' },
  { border: 'border-green-500', bg: 'bg-green-50' },
  { border: 'border-purple-500', bg: 'bg-purple-50' },
];
---

<details
  id="levels-details"
  class="group mt-6 [&_summary::-webkit-details-marker]:hidden"
>
  <summary
    class="flex cursor-pointer items-center justify-between gap-4 bg-gray-50 p-6"
  >
    <div>
      <h2 class="mb-2 text-2xl font-bold text-gray-900">
        {title}
      </h2>
      <p class="text-gray-600">{description}</p>
    </div>
    <svg
      class="size-6 shrink-0 text-gray-500 transition-transform duration-300 group-open:-rotate-180"
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      stroke="currentColor"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M19 9l-7 7-7-7"></path>
    </svg>
  </summary>

  <div class="space-y-6 bg-gray-50 p-6">
    {
      levels.map((level, index) => {
        const color = colors[index] || colors[0];

        return (
          <div
            id={`level-${index}`}
            class={`border-l-4 bg-white p-5 shadow-sm ${color.border}`}
          >
            <h3 class="mb-2 text-xl font-bold text-gray-900">{level.name}</h3>
            <p class="mb-4 text-gray-700">{level.description}</p>

            {level.subLevels && level.subLevels.length > 0 && (
              <div class="ml-4 space-y-3">
                {level.subLevels.map((subLevel) => (
                  <div class={`${color.bg} p-4`}>
                    <h4 class="mb-1 font-semibold text-gray-900">
                      {subLevel.name}
                    </h4>
                    <p class="text-sm text-gray-700">{subLevel.description}</p>
                  </div>
                ))}
              </div>
            )}
          </div>
        );
      })
    }
  </div>
</details>
