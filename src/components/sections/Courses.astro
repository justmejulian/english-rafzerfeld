---
import { z } from 'astro:content';

import { multiLingualSchema } from '@utils/zod.ts';
import { getLocaleData, getLocaleFromURL } from '@utils/locale.ts';
import { getLevelColor, getLevelId } from '@utils/cefLevel.ts';

import data from '@content/courses.json';
import Levels from '@components/sections/Levels.astro';

const locale = getLocaleFromURL(Astro.url);

const contentSchema = multiLingualSchema(
  z.object({
    title: z.string(),
    days: z.array(
      z.object({
        name: z.string(),
        lessons: z.array(
          z.object({
            time: z.string(),
            level: z.string(),
            ceflevel: z.string(),
          }),
        ),
      }),
    ),
    levelsTitle: z.string(),
    levelsDescription: z.string(),
    levels: z.array(
      z.object({
        name: z.string(),
        description: z.string(),
        subLevels: z.array(
          z.object({
            name: z.string(),
            description: z.string(),
          }),
        ),
      }),
    ),
  }),
);

const parsedData = contentSchema.parse(data);

const content = getLocaleData(locale, parsedData);
---

<div id="courses" class="mt-4 flex w-full flex-col">
  <h1>{content.title}</h1>
  {
    content.days.map((day) => (
      <table class="w-full max-w-3xl divide-y-2 divide-gray-200">
        <thead>
          <tr class="text-left *:text-gray-900 *:first:font-medium">
            <th class="w-1/4 px-3 py-2 whitespace-nowrap">{day.name}</th>
            <th />
            <th class="px-3 py-2 text-left whitespace-nowrap">CEF Level</th>
          </tr>
        </thead>
        <tbody class="divide-y divide-gray-200">
          {day.lessons.map((lesson) => (
            <tr class="*:font-medium *:text-gray-900">
              <td class="w-1/8 px-3 py-2 whitespace-nowrap">{lesson.time}</td>
              <td class="px-3 py-2 whitespace-nowrap">{lesson.level}</td>
              <td
                class={`w-1/8 px-3 py-2 whitespace-nowrap ${getLevelColor(lesson.ceflevel).bg}`}
              >
                <a href={`#${getLevelId(lesson.ceflevel)}`} class="underline">
                  {lesson.ceflevel}
                </a>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    ))
  }

  <Levels
    title={content.levelsTitle}
    description={content.levelsDescription}
    levels={content.levels}
  />
</div>
